;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 3/6/2017 9:09:36 PM
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x2838      	GOTO       56
_interrupt:
0x0004	0x00FF      	MOVWF      R15
0x0005	0x0E03      	SWAPF      STATUS, 0
0x0006	0x0183      	CLRF       STATUS
0x0007	0x00B0      	MOVWF      ___saveSTATUS
0x0008	0x080A      	MOVF       PCLATH, 0
0x0009	0x00AF      	MOVWF      ___savePCLATH
0x000A	0x018A      	CLRF       PCLATH
;zerocrossing.c,37 :: 		void interrupt(){
;zerocrossing.c,38 :: 		if (INTCON.INTF){          //INTF flag raised, so external interrupt occured
0x000B	0x1C8B      	BTFSS      INTCON, 1
0x000C	0x2814      	GOTO       L_interrupt2
;zerocrossing.c,39 :: 		ZC = 1;
0x000D	0x142E      	BSF        _FlagReg, 0
;zerocrossing.c,40 :: 		i=0;
0x000E	0x01A4      	CLRF       _i
0x000F	0x01A5      	CLRF       _i+1
;zerocrossing.c,41 :: 		PORTC.RC5 = 0;
0x0010	0x1287      	BCF        PORTC, 5
;zerocrossing.c,42 :: 		INTCON.INTF = 0;
0x0011	0x108B      	BCF        INTCON, 1
;zerocrossing.c,43 :: 		dimCounter=0;
0x0012	0x01A0      	CLRF       _DimCounter
0x0013	0x01A1      	CLRF       _DimCounter+1
;zerocrossing.c,44 :: 		}
L_interrupt2:
;zerocrossing.c,45 :: 		if(PIR1.CCP1IF) {
0x0014	0x1D0C      	BTFSS      PIR1, 2
0x0015	0x281E      	GOTO       L_interrupt3
;zerocrossing.c,47 :: 		PIR1.CCP1IF =0;
0x0016	0x110C      	BCF        PIR1, 2
;zerocrossing.c,48 :: 		PIR1.TMR1IF =0;
0x0017	0x100C      	BCF        PIR1, 0
;zerocrossing.c,49 :: 		CompMatch = 1;
0x0018	0x3001      	MOVLW      1
0x0019	0x00A2      	MOVWF      _CompMatch
0x001A	0x3000      	MOVLW      0
0x001B	0x00A3      	MOVWF      _CompMatch+1
;zerocrossing.c,50 :: 		TMR1L=0;
0x001C	0x018E      	CLRF       TMR1L
;zerocrossing.c,51 :: 		TMR1H=0;
0x001D	0x018F      	CLRF       TMR1H
;zerocrossing.c,52 :: 		}
L_interrupt3:
;zerocrossing.c,53 :: 		}
L_end_interrupt:
L__interrupt19:
0x001E	0x082F      	MOVF       ___savePCLATH, 0
0x001F	0x008A      	MOVWF      PCLATH
0x0020	0x0E30      	SWAPF      ___saveSTATUS, 0
0x0021	0x0083      	MOVWF      STATUS
0x0022	0x0EFF      	SWAPF      R15, 1
0x0023	0x0E7F      	SWAPF      R15, 0
0x0024	0x0009      	RETFIE
; end of _interrupt
_____DoICP:
;__Lib_System.c,6 :: 		
;__Lib_System.c,9 :: 		
0x0025	0x1283      	BCF        STATUS, 5
0x0026	0x1303      	BCF        STATUS, 6
0x0027	0x082D      	MOVF       ___DoICPAddr+1, 0
0x0028	0x008A      	MOVWF      PCLATH
;__Lib_System.c,10 :: 		
0x0029	0x082C      	MOVF       ___DoICPAddr, 0
0x002A	0x0082      	MOVWF      PCL
;__Lib_System.c,12 :: 		
L_end_____DoICP:
0x002B	0x0008      	RETURN
; end of _____DoICP
___CC2DW:
;__Lib_System.c,134 :: 		
;__Lib_System.c,137 :: 		
_CC2D_Loop1:
;__Lib_System.c,139 :: 		
0x002C	0x2025      	CALL       _____DoICP
0x002D	0x118A      	BCF        PCLATH, 3
0x002E	0x120A      	BCF        PCLATH, 4
;__Lib_System.c,141 :: 		
0x002F	0x0080      	MOVWF      INDF
;__Lib_System.c,142 :: 		
0x0030	0x0A84      	INCF       FSR, 1
;__Lib_System.c,143 :: 		
0x0031	0x0AAC      	INCF       ___DoICPAddr, 1
;__Lib_System.c,145 :: 		
0x0032	0x1903      	BTFSC      STATUS, 2
;__Lib_System.c,146 :: 		
0x0033	0x0AAD      	INCF       ___DoICPAddr+1, 1
;__Lib_System.c,147 :: 		
0x0034	0x03F0      	DECF       R0, 1
;__Lib_System.c,149 :: 		
0x0035	0x1D03      	BTFSS      STATUS, 2
;__Lib_System.c,150 :: 		
0x0036	0x282C      	GOTO       _CC2D_Loop1
;__Lib_System.c,152 :: 		
L_end___CC2DW:
0x0037	0x0008      	RETURN
; end of ___CC2DW
_main:
0x0038	0x1283      	BCF        STATUS, 5
0x0039	0x1303      	BCF        STATUS, 6
0x003A	0x01A0      	CLRF       _DimCounter
0x003B	0x01A1      	CLRF       33
0x003C	0x01A2      	CLRF       _CompMatch
0x003D	0x01A3      	CLRF       35
0x003E	0x01A4      	CLRF       _i
0x003F	0x01A5      	CLRF       37
0x0040	0x01A6      	CLRF       _isButtonPressed2
0x0041	0x01A7      	CLRF       39
0x0042	0x01A8      	CLRF       _isButtonPressed1
0x0043	0x01A9      	CLRF       41
0x0044	0x01AA      	CLRF       _DimTime
0x0045	0x01AB      	CLRF       43
;zerocrossing.c,55 :: 		void main() {
;zerocrossing.c,56 :: 		PORTB = 0;
0x0046	0x0186      	CLRF       PORTB
;zerocrossing.c,57 :: 		TRISB = 0x07;              //RB0 input for interrupt
0x0047	0x3007      	MOVLW      7
0x0048	0x1683      	BSF        STATUS, 5
0x0049	0x0086      	MOVWF      TRISB
;zerocrossing.c,58 :: 		PORTC = 0;
0x004A	0x1283      	BCF        STATUS, 5
0x004B	0x0187      	CLRF       PORTC
;zerocrossing.c,59 :: 		TRISC = 0;                 //PORTD all output
0x004C	0x1683      	BSF        STATUS, 5
0x004D	0x0187      	CLRF       TRISC
;zerocrossing.c,60 :: 		PORTA=0;
0x004E	0x1283      	BCF        STATUS, 5
0x004F	0x0185      	CLRF       PORTA
;zerocrossing.c,61 :: 		TRISA=0;
0x0050	0x1683      	BSF        STATUS, 5
0x0051	0x0185      	CLRF       TRISA
;zerocrossing.c,62 :: 		TRISA.RA0=1;
0x0052	0x1405      	BSF        TRISA, 0
;zerocrossing.c,63 :: 		TRISA.RA1=1;
0x0053	0x1485      	BSF        TRISA, 1
;zerocrossing.c,65 :: 		ADCON1 =0xff;
0x0054	0x30FF      	MOVLW      255
0x0055	0x009F      	MOVWF      ADCON1
;zerocrossing.c,66 :: 		ADCON0 = 0;
0x0056	0x1283      	BCF        STATUS, 5
0x0057	0x019F      	CLRF       ADCON0
;zerocrossing.c,67 :: 		ADCON0.ADON = 0; // ADC off
0x0058	0x101F      	BCF        ADCON0, 0
;zerocrossing.c,71 :: 		OPTION_REG.INTEDG = 1;      //interrupt on falling edge
0x0059	0x1683      	BSF        STATUS, 5
0x005A	0x1701      	BSF        OPTION_REG, 6
;zerocrossing.c,72 :: 		INTCON.INTF = 0;           //clear interrupt flag
0x005B	0x108B      	BCF        INTCON, 1
;zerocrossing.c,73 :: 		INTCON.INTE = 1;           //enable external interrupt
0x005C	0x160B      	BSF        INTCON, 4
;zerocrossing.c,74 :: 		INTCON.GIE = 1;            //enable global interrupt
0x005D	0x178B      	BSF        INTCON, 7
;zerocrossing.c,75 :: 		INTCON.PEIE = 1; // enable periferal interrupt
0x005E	0x170B      	BSF        INTCON, 6
;zerocrossing.c,80 :: 		TMR1L =0;
0x005F	0x1283      	BCF        STATUS, 5
0x0060	0x018E      	CLRF       TMR1L
;zerocrossing.c,81 :: 		TMR1H=0;
0x0061	0x018F      	CLRF       TMR1H
;zerocrossing.c,83 :: 		T1CON.T1CKPS1 = 0;
0x0062	0x1290      	BCF        T1CON, 5
;zerocrossing.c,84 :: 		T1CON.T1CKPS0 = 0;
0x0063	0x1210      	BCF        T1CON, 4
;zerocrossing.c,87 :: 		T1CON.TMR1CS =0; // timer1 Source clock. 0 = internal, 1 = external
0x0064	0x1090      	BCF        T1CON, 1
;zerocrossing.c,88 :: 		T1CON.TMR1ON=1;    //timer on bit
0x0065	0x1410      	BSF        T1CON, 0
;zerocrossing.c,90 :: 		PIE1.TMR1IE = 1; // timer overflow enable
0x0066	0x1683      	BSF        STATUS, 5
0x0067	0x140C      	BSF        PIE1, 0
;zerocrossing.c,96 :: 		CCP1CON.CCP1M3 = 1;
0x0068	0x1283      	BCF        STATUS, 5
0x0069	0x1597      	BSF        CCP1CON, 3
;zerocrossing.c,97 :: 		CCP1CON.CCP1M2 = 0;
0x006A	0x1117      	BCF        CCP1CON, 2
;zerocrossing.c,98 :: 		CCP1CON.CCP1M1 = 1;
0x006B	0x1497      	BSF        CCP1CON, 1
;zerocrossing.c,99 :: 		CCP1CON.CCP1M0 = 0;
0x006C	0x1017      	BCF        CCP1CON, 0
;zerocrossing.c,100 :: 		PIE1.CCP1IE =1;  // CCP1 interrupt enable bit
0x006D	0x1683      	BSF        STATUS, 5
0x006E	0x150C      	BSF        PIE1, 2
;zerocrossing.c,103 :: 		CCPR1L =0x4B;
0x006F	0x304B      	MOVLW      75
0x0070	0x1283      	BCF        STATUS, 5
0x0071	0x0095      	MOVWF      CCPR1L
;zerocrossing.c,104 :: 		CCPR1H =0x00;
0x0072	0x0196      	CLRF       CCPR1H
;zerocrossing.c,108 :: 		while (1){
L_main4:
;zerocrossing.c,111 :: 		if(CompMatch == 1) {
0x0073	0x3000      	MOVLW      0
0x0074	0x0623      	XORWF      _CompMatch+1, 0
0x0075	0x1D03      	BTFSS      STATUS, 2
0x0076	0x2879      	GOTO       L__main21
0x0077	0x3001      	MOVLW      1
0x0078	0x0622      	XORWF      _CompMatch, 0
L__main21:
0x0079	0x1D03      	BTFSS      STATUS, 2
0x007A	0x28A7      	GOTO       L_main6
;zerocrossing.c,112 :: 		CompMatch=0;
0x007B	0x01A2      	CLRF       _CompMatch
0x007C	0x01A3      	CLRF       _CompMatch+1
;zerocrossing.c,113 :: 		if (ZC){ //zero crossing occurred
0x007D	0x1C2E      	BTFSS      _FlagReg, 0
0x007E	0x28A7      	GOTO       L_main7
;zerocrossing.c,114 :: 		if(i>=DimTime) {
0x007F	0x3080      	MOVLW      128
0x0080	0x0625      	XORWF      _i+1, 0
0x0081	0x00F0      	MOVWF      R0
0x0082	0x3080      	MOVLW      128
0x0083	0x062B      	XORWF      _DimTime+1, 0
0x0084	0x0270      	SUBWF      R0, 0
0x0085	0x1D03      	BTFSS      STATUS, 2
0x0086	0x2889      	GOTO       L__main22
0x0087	0x082A      	MOVF       _DimTime, 0
0x0088	0x0224      	SUBWF      _i, 0
L__main22:
0x0089	0x1C03      	BTFSS      STATUS, 0
0x008A	0x288C      	GOTO       L_main8
;zerocrossing.c,115 :: 		PORTC.RC5 = 1;
0x008B	0x1687      	BSF        PORTC, 5
;zerocrossing.c,116 :: 		}
L_main8:
;zerocrossing.c,117 :: 		if(i>(DimTime+3)) {
0x008C	0x3003      	MOVLW      3
0x008D	0x072A      	ADDWF      _DimTime, 0
0x008E	0x00F1      	MOVWF      R1
0x008F	0x082B      	MOVF       _DimTime+1, 0
0x0090	0x1803      	BTFSC      STATUS, 0
0x0091	0x3E01      	ADDLW      1
0x0092	0x00F2      	MOVWF      R1+1
0x0093	0x3080      	MOVLW      128
0x0094	0x0672      	XORWF      R1+1, 0
0x0095	0x00F0      	MOVWF      R0
0x0096	0x3080      	MOVLW      128
0x0097	0x0625      	XORWF      _i+1, 0
0x0098	0x0270      	SUBWF      R0, 0
0x0099	0x1D03      	BTFSS      STATUS, 2
0x009A	0x289D      	GOTO       L__main23
0x009B	0x0824      	MOVF       _i, 0
0x009C	0x0271      	SUBWF      R1, 0
L__main23:
0x009D	0x1803      	BTFSC      STATUS, 0
0x009E	0x28A4      	GOTO       L_main9
;zerocrossing.c,118 :: 		i=0;
0x009F	0x01A4      	CLRF       _i
0x00A0	0x01A5      	CLRF       _i+1
;zerocrossing.c,119 :: 		ZC=0;
0x00A1	0x102E      	BCF        _FlagReg, 0
;zerocrossing.c,120 :: 		PORTC.RC5 =0;
0x00A2	0x1287      	BCF        PORTC, 5
;zerocrossing.c,121 :: 		}
0x00A3	0x28A7      	GOTO       L_main10
L_main9:
;zerocrossing.c,123 :: 		i++;
0x00A4	0x0AA4      	INCF       _i, 1
0x00A5	0x1903      	BTFSC      STATUS, 2
0x00A6	0x0AA5      	INCF       _i+1, 1
;zerocrossing.c,125 :: 		}
L_main10:
;zerocrossing.c,126 :: 		}
L_main7:
;zerocrossing.c,127 :: 		}
L_main6:
;zerocrossing.c,131 :: 		if(RB1_bit) {
0x00A7	0x1C86      	BTFSS      RB1_bit, BitPos(RB1_bit+0)
0x00A8	0x28BB      	GOTO       L_main11
;zerocrossing.c,132 :: 		if(isButtonPressed1 == 0) {
0x00A9	0x3000      	MOVLW      0
0x00AA	0x0629      	XORWF      _isButtonPressed1+1, 0
0x00AB	0x1D03      	BTFSS      STATUS, 2
0x00AC	0x28AF      	GOTO       L__main24
0x00AD	0x3000      	MOVLW      0
0x00AE	0x0628      	XORWF      _isButtonPressed1, 0
L__main24:
0x00AF	0x1D03      	BTFSS      STATUS, 2
0x00B0	0x28BA      	GOTO       L_main12
;zerocrossing.c,133 :: 		DimTime = DimTime+25;
0x00B1	0x3019      	MOVLW      25
0x00B2	0x07AA      	ADDWF      _DimTime, 1
0x00B3	0x1803      	BTFSC      STATUS, 0
0x00B4	0x0AAB      	INCF       _DimTime+1, 1
;zerocrossing.c,134 :: 		isButtonPressed1 =1;
0x00B5	0x3001      	MOVLW      1
0x00B6	0x00A8      	MOVWF      _isButtonPressed1
0x00B7	0x3000      	MOVLW      0
0x00B8	0x00A9      	MOVWF      _isButtonPressed1+1
;zerocrossing.c,135 :: 		PORTB.RB4=1;
0x00B9	0x1606      	BSF        PORTB, 4
;zerocrossing.c,136 :: 		}
L_main12:
;zerocrossing.c,137 :: 		}else {
0x00BA	0x28BE      	GOTO       L_main13
L_main11:
;zerocrossing.c,138 :: 		isButtonPressed1=0;
0x00BB	0x01A8      	CLRF       _isButtonPressed1
0x00BC	0x01A9      	CLRF       _isButtonPressed1+1
;zerocrossing.c,139 :: 		PORTB.RB4=0;
0x00BD	0x1206      	BCF        PORTB, 4
;zerocrossing.c,140 :: 		}
L_main13:
;zerocrossing.c,142 :: 		if(RB2_bit) {
0x00BE	0x1D06      	BTFSS      RB2_bit, BitPos(RB2_bit+0)
0x00BF	0x28D2      	GOTO       L_main14
;zerocrossing.c,143 :: 		if(isButtonPressed2 == 0) {
0x00C0	0x3000      	MOVLW      0
0x00C1	0x0627      	XORWF      _isButtonPressed2+1, 0
0x00C2	0x1D03      	BTFSS      STATUS, 2
0x00C3	0x28C6      	GOTO       L__main25
0x00C4	0x3000      	MOVLW      0
0x00C5	0x0626      	XORWF      _isButtonPressed2, 0
L__main25:
0x00C6	0x1D03      	BTFSS      STATUS, 2
0x00C7	0x28D1      	GOTO       L_main15
;zerocrossing.c,144 :: 		DimTime = DimTime-25;
0x00C8	0x3019      	MOVLW      25
0x00C9	0x02AA      	SUBWF      _DimTime, 1
0x00CA	0x1C03      	BTFSS      STATUS, 0
0x00CB	0x03AB      	DECF       _DimTime+1, 1
;zerocrossing.c,145 :: 		isButtonPressed2 =1;
0x00CC	0x3001      	MOVLW      1
0x00CD	0x00A6      	MOVWF      _isButtonPressed2
0x00CE	0x3000      	MOVLW      0
0x00CF	0x00A7      	MOVWF      _isButtonPressed2+1
;zerocrossing.c,146 :: 		PORTB.RB5=1;
0x00D0	0x1686      	BSF        PORTB, 5
;zerocrossing.c,147 :: 		}
L_main15:
;zerocrossing.c,148 :: 		}else {
0x00D1	0x28D5      	GOTO       L_main16
L_main14:
;zerocrossing.c,149 :: 		isButtonPressed2=0;
0x00D2	0x01A6      	CLRF       _isButtonPressed2
0x00D3	0x01A7      	CLRF       _isButtonPressed2+1
;zerocrossing.c,150 :: 		PORTB.RB5=0;
0x00D4	0x1286      	BCF        PORTB, 5
;zerocrossing.c,151 :: 		}
L_main16:
;zerocrossing.c,155 :: 		}
0x00D5	0x2873      	GOTO       L_main4
;zerocrossing.c,156 :: 		}
L_end_main:
0x00D6	0x28D6      	GOTO       $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0004      [33]    _interrupt
0x0025       [7]    _____DoICP
0x002C      [12]    ___CC2DW
0x0038     [159]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    INDF
0x0002       [1]    PCL
0x0003       [1]    STATUS
0x0004       [1]    FSR
0x0005       [1]    PORTA
0x0006       [0]    RB2_bit
0x0006       [0]    RB1_bit
0x0006       [1]    PORTB
0x0007       [1]    PORTC
0x000A       [1]    PCLATH
0x000B       [1]    INTCON
0x000C       [1]    PIR1
0x000E       [1]    TMR1L
0x000F       [1]    TMR1H
0x0010       [1]    T1CON
0x0015       [1]    CCPR1L
0x0016       [1]    CCPR1H
0x0017       [1]    CCP1CON
0x001F       [1]    ADCON0
0x0020       [2]    _DimCounter
0x0022       [2]    _CompMatch
0x0024       [2]    _i
0x0026       [2]    _isButtonPressed2
0x0028       [2]    _isButtonPressed1
0x002A       [2]    _DimTime
0x002C       [2]    ___DoICPAddr
0x002E       [1]    _FlagReg
0x002E       [0]    _ZC
0x002F       [1]    ___savePCLATH
0x0030       [1]    ___saveSTATUS
0x0070       [1]    R0
0x0071       [1]    R1
0x0072       [1]    R2
0x0073       [1]    R3
0x0074       [1]    R4
0x0075       [1]    R5
0x0076       [1]    R6
0x0077       [1]    R7
0x0078       [1]    R8
0x0079       [1]    R9
0x007A       [1]    R10
0x007B       [1]    R11
0x007C       [1]    R12
0x007D       [1]    R13
0x007E       [1]    R14
0x007F       [1]    R15
0x0081       [1]    OPTION_REG
0x0085       [1]    TRISA
0x0086       [1]    TRISB
0x0087       [1]    TRISC
0x008C       [1]    PIE1
0x009F       [1]    ADCON1
